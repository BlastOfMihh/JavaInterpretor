id 0 
 *Symtable : {}
 *Output log : []
 *ExecutionStack:[((VarDeclarationStatement:a with type=IntType,(VarDeclarationStatement:b with type=IntType,(VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))))))),NopStatement)]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:a with type=IntType,(VarDeclarationStatement:b with type=IntType,(VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})))))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:a with type=IntType,(VarDeclarationStatement:b with type=IntType,(VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})))))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:b with type=IntType,(VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})))))), VarDeclarationStatement:a with type=IntType]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:b with type=IntType,(VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})))))), VarDeclarationStatement:a with type=IntType]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {a=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:b with type=IntType,(VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {a=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:b with type=IntType,(VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {a=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))))), VarDeclarationStatement:b with type=IntType]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {a=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))))), VarDeclarationStatement:b with type=IntType]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:c with type=IntType,(AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})))), VarDeclarationStatement:c with type=IntType]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})))), VarDeclarationStatement:c with type=IntType]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:0, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:0, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1},(AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:0, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))), AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:0, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))), AssigmentStatemnet a=ValueExpression{value=Type:IntType Value:1}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:1, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:1, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2},(AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:1, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})), AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:0, a=Type:IntType Value:1, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})), AssigmentStatemnet b=ValueExpression{value=Type:IntType Value:2}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5},(SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}), AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:0}
 *Output log : []
 *ExecutionStack:[NopStatement, (SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}}), AssigmentStatemnet c=ValueExpression{value=Type:IntType Value:5}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : []
 *ExecutionStack:[NopStatement, (SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : []
 *ExecutionStack:[NopStatement, (SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}},PrintStatement{ValueExpression{value=Type:IntType Value:300}})]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : []
 *ExecutionStack:[NopStatement, PrintStatement{ValueExpression{value=Type:IntType Value:300}}, SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : []
 *ExecutionStack:[NopStatement, PrintStatement{ValueExpression{value=Type:IntType Value:300}}, SwitchStmt{mainExpression=Expression multiplication between VariableExpression{key='a'} and ValueExpression{value=Type:IntType Value:10}, casesList=[CaseSwitch{expression=Expression multiplication between VariableExpression{key='b'} and VariableExpression{key='c'}, statement=(PrintStatement{VariableExpression{key='a'}},PrintStatement{VariableExpression{key='b'}})}, CaseSwitch{expression=ValueExpression{value=Type:IntType Value:10}, statement=(PrintStatement{ValueExpression{value=Type:IntType Value:100}},PrintStatement{ValueExpression{value=Type:IntType Value:200}})}], defaultStmt=PrintStatement{ValueExpression{value=Type:IntType Value:300}}}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : []
 *ExecutionStack:[NopStatement, PrintStatement{ValueExpression{value=Type:IntType Value:300}}, PrintStatement{VariableExpression{key='b'}}, PrintStatement{VariableExpression{key='a'}}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : []
 *ExecutionStack:[NopStatement, PrintStatement{ValueExpression{value=Type:IntType Value:300}}, PrintStatement{VariableExpression{key='b'}}, PrintStatement{VariableExpression{key='a'}}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : [Type:IntType Value:1
]
 *ExecutionStack:[NopStatement, PrintStatement{ValueExpression{value=Type:IntType Value:300}}, PrintStatement{VariableExpression{key='b'}}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : [Type:IntType Value:1
]
 *ExecutionStack:[NopStatement, PrintStatement{ValueExpression{value=Type:IntType Value:300}}, PrintStatement{VariableExpression{key='b'}}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : [Type:IntType Value:1
, Type:IntType Value:2
]
 *ExecutionStack:[NopStatement, PrintStatement{ValueExpression{value=Type:IntType Value:300}}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : [Type:IntType Value:1
, Type:IntType Value:2
]
 *ExecutionStack:[NopStatement, PrintStatement{ValueExpression{value=Type:IntType Value:300}}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : [Type:IntType Value:1
, Type:IntType Value:2
, Type:IntType Value:300
]
 *ExecutionStack:[NopStatement]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : [Type:IntType Value:1
, Type:IntType Value:2
, Type:IntType Value:300
]
 *ExecutionStack:[NopStatement]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {b=Type:IntType Value:2, a=Type:IntType Value:1, c=Type:IntType Value:5}
 *Output log : [Type:IntType Value:1
, Type:IntType Value:2
, Type:IntType Value:300
]
 *ExecutionStack:[]
 *FileTable: {}
 *Heap: {}

