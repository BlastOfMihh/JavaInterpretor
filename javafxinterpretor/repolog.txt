id 0 
 *Symtable : {}
 *Output log : []
 *ExecutionStack:[((VarDeclarationStatement:v1 with type=RefType,(VarDeclarationStatement:cnt with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))))))),NopStatement)]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:v1 with type=RefType,(VarDeclarationStatement:cnt with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))))))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:v1 with type=RefType,(VarDeclarationStatement:cnt with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))))))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:cnt with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))))))), VarDeclarationStatement:v1 with type=RefType]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:cnt with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))))))), VarDeclarationStatement:v1 with type=RefType]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {v1=RefValue{adress=0, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:cnt with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {v1=RefValue{adress=0, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:cnt with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {v1=RefValue{adress=0, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))))), VarDeclarationStatement:cnt with type=IntType]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {v1=RefValue{adress=0, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))))), VarDeclarationStatement:cnt with type=IntType]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {cnt=Type:IntType Value:0, v1=RefValue{adress=0, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {cnt=Type:IntType Value:0, v1=RefValue{adress=0, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}},(CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))))))]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {cnt=Type:IntType Value:0, v1=RefValue{adress=0, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))))), NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {cnt=Type:IntType Value:0, v1=RefValue{adress=0, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))))), NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:1}}]
 *FileTable: {}
 *Heap: {}

id 0 
 *Symtable : {cnt=Type:IntType Value:0, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:0, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:0, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))), CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:0, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))), CreateSemaphoreStmt{varName='cnt', expression=ReadHeapExp{expression=VariableExpression{key='v1'}}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))},(ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))), ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))), ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))},(AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})), ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})), ForkStmt{statement=(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (AquireStmt{varName='cnt'},(PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(AquireStmt{varName='cnt'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}), HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}), HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:1}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[ReleaseStmt{varName='cnt'}, PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[ReleaseStmt{varName='cnt'}, PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[ReleaseStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[ReleaseStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 1 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'}), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[NopStatement, (PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},ReleaseStmt{varName='cnt'})]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[NopStatement, ReleaseStmt{varName='cnt'}, PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[NopStatement, ReleaseStmt{varName='cnt'}, PrintStatement{Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[NopStatement, ReleaseStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[NopStatement, ReleaseStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))), AquireStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[NopStatement]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[NopStatement]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 0 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})), HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})), HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:10}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:100}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:100}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}), HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:100}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'}), HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:2}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:100}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:200}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},ReleaseStmt{varName='cnt'})]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:200}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[ReleaseStmt{varName='cnt'}, PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:200}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
]
 *ExecutionStack:[ReleaseStmt{varName='cnt'}, PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:200}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
, Type:IntType Value:200
]
 *ExecutionStack:[ReleaseStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:200}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
, Type:IntType Value:200
]
 *ExecutionStack:[ReleaseStmt{varName='cnt'}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:200}

id 2 
 *Symtable : {cnt=Type:IntType Value:1, v1=RefValue{adress=1, locationType=IntType}}
 *Output log : [Type:IntType Value:10
, Type:IntType Value:9
, Type:IntType Value:200
]
 *ExecutionStack:[]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:200}

