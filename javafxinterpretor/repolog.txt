id 0 
 *SymtableStack : [{}]
 *Output log : []
 *ExecutionStack:[((VarDeclarationStatement:v1 with type=RefType,(VarDeclarationStatement:v2 with type=RefType,(VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))))))),NopStatement)]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:v1 with type=RefType,(VarDeclarationStatement:v2 with type=RefType,(VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))))))))]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:v1 with type=RefType,(VarDeclarationStatement:v2 with type=RefType,(VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))))))))]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:v2 with type=RefType,(VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))))))), VarDeclarationStatement:v1 with type=RefType]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:v2 with type=RefType,(VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))))))), VarDeclarationStatement:v1 with type=RefType]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:v2 with type=RefType,(VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))))))]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:v2 with type=RefType,(VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))))))]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))))), VarDeclarationStatement:v2 with type=RefType]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))))), VarDeclarationStatement:v2 with type=RefType]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))))))]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:x with type=IntType,(VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))))))]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))))), VarDeclarationStatement:x with type=IntType]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))))), VarDeclarationStatement:x with type=IntType]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))))]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (VarDeclarationStatement:q with type=IntType,(NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))))]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))), VarDeclarationStatement:q with type=IntType]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))), VarDeclarationStatement:q with type=IntType]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))))]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}},(NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))))]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))), NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}}]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=0, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))), NewStatement{varName='v1', expression=ValueExpression{value=Type:IntType Value:20}}]
 *FileTable: {}
 *Heap: {}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:20}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}},(NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))))]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:20}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))), NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:20}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=0, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))), NewStatement{varName='v2', expression=ValueExpression{value=Type:IntType Value:30}}]
 *FileTable: {}
 *Heap: {1=Type:IntType Value:20}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewLockStmt{varName='x'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))), NewLockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:0, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))), NewLockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))},(NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))), ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))), ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NewLockStmt{varName='q'},(ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))},(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))), NewLockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})), ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))), NewLockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})), ForkStmt{statement=(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'}))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))},(NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'}))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='x'},(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))), ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))), ForkStmt{statement=(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='x'})]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))},(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))), NopStatement]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='x'}, HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})), ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))), NopStatement]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='x'}, HeapWriteStmt{referenceName='v1', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:10}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})), ForkStmt{statement=(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:20}
 *LockTable: {2=-1, 1=1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=1}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'}))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=1}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=1}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'}))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=1}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(LockStmt{varName='q'},(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))), NopStatement]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=-1}
id 1 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=-1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=-1}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=-1}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))), NopStatement]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=-1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'}), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=-1}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=-1}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'})]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}},UnLockStmt{varName='x'})]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}},UnLockStmt{varName='q'})]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))), NopStatement]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='x'}, HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='q'}, HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))), NopStatement]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='x'}, HeapWriteStmt{referenceName='v1', expression=Expression minus between ReadHeapExp{expression=VariableExpression{key='v1'}} and ValueExpression{value=Type:IntType Value:1}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='q'}, HeapWriteStmt{referenceName='v2', expression=Expression multiplication between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:10}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:30, 1=Type:IntType Value:200}
 *LockTable: {2=3, 1=2}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=3, 1=2}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=3, 1=2}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=3, 1=2}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=3, 1=2}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (NopStatement,(LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=3, 1=2}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=3, 1=2}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=3, 1=2}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=3, 1=2}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))), NopStatement]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 2 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:0, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 3 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'})]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))), NopStatement]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[(HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}},UnLockStmt{varName='q'})]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='q'}, HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (LockStmt{varName='x'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='q'}, HeapWriteStmt{referenceName='v2', expression=Expression plus between ReadHeapExp{expression=VariableExpression{key='v2'}} and ValueExpression{value=Type:IntType Value:5}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:300, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))), LockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[UnLockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=4, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=0}
id 4 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=0}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}},(UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=0}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))), PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=0}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : []
 *ExecutionStack:[NopStatement, (UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))), PrintStatement{ReadHeapExp{expression=VariableExpression{key='v1'}}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=0}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, (UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=0}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, (UnLockStmt{varName='x'},(LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=0}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, (LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})), UnLockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=0}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, (LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})), UnLockStmt{varName='x'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=0}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, (LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, (LockStmt{varName='q'},(PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}))]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, (PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, (PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'}), LockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, (PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=0, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, (PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}},UnLockStmt{varName='q'})]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=0, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, UnLockStmt{varName='q'}, PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=0, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
]
 *ExecutionStack:[NopStatement, UnLockStmt{varName='q'}, PrintStatement{ReadHeapExp{expression=VariableExpression{key='v2'}}}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=0, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
, Type:IntType Value:305
]
 *ExecutionStack:[NopStatement, UnLockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=0, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
, Type:IntType Value:305
]
 *ExecutionStack:[NopStatement, UnLockStmt{varName='q'}]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=0, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
, Type:IntType Value:305
]
 *ExecutionStack:[NopStatement]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
, Type:IntType Value:305
]
 *ExecutionStack:[NopStatement]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=-1}
id 0 
 *SymtableStack : [{x=Type:IntType Value:1, q=Type:IntType Value:2, v2=RefValue{adress=2, locationType=IntType}, v1=RefValue{adress=1, locationType=IntType}}]
 *Output log : [Type:IntType Value:199
, Type:IntType Value:305
]
 *ExecutionStack:[]
 *FileTable: {}
 *Heap: {2=Type:IntType Value:305, 1=Type:IntType Value:199}
 *LockTable: {2=-1, 1=-1}
